name: Publish npm package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Tests with Coverage
        run: deno task test:coverage

      - name: Lint
        run: deno task lint

      - name: Build npm package
        run: deno task build:npm

  publish-npm:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Get tag version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo TAG_VERSION=${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT

      - name: Publish Release
        if: ${{ contains(steps.get_tag_version.outputs.TAG_VERSION, '-') == false }}
        run: cd npm && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Pre-Release
        if: ${{ contains(steps.get_tag_version.outputs.TAG_VERSION, '-') == true && contains(steps.get_tag_version.outputs.TAG_VERSION, '-beta') == false }}
        run: cd npm && npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Beta Release
        if: ${{ contains(steps.get_tag_version.outputs.TAG_VERSION, '-beta') == true }}
        run: cd npm && npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
